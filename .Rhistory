library(SDSRegressionR)
# Import data
admission <- read.csv("data/cs_data_final.csv", stringsAsFactors = FALSE)
names(prostate)
names(admission)
View(admission)
View(admission)
# Count check
count(admission$score)
# Count check
hist(admission$score)
# Count check
hist(admission$score)
# Count check
hist(admission$score[1:100])
# Count check
hist(admission$score[1:200])
# Count check
hist(admission$score[1:300])
# Count check
hist(admission$score[1:400])
# Count check
hist(admission$gretot[1:400])
# Count check
hist(admission$status[1:400])
# Count check
count(admission$status[1:400])
# Count check
count(admission$status[1:300])
# Count check
hist(admission$score[1:300])
count(admission$decision[1:300])
hist(admission$year[1:300])
View(admission)
View(admission)
library(SDSRegressionR)
# Import data
admission <- read.csv("data/cs_data_final.csv", stringsAsFactors = FALSE)
names(admission)
View(admission)
View(admission)
count(admission$university[1:300])
count(admission$university)
# Count check
hist(admission$score[1:300])
hist(admission$year[1:300])
count(admission$status[1:300])
count(admission$decision[1:300])
count(admission$university[1:300])
hist(admission$gpafin[1:300])
hist(admission$grem[1:300])
hist(admission$grev[1:300])
hist(admission$gretot[1:300])
# Import data
admission <- read.csv("data/cs_data_final.csv", stringsAsFactors = FALSE)
names(admission)
# Count check
hist(admission$score[1:300])
hist(admission$year[1:300])
hist(admission$gpafin[1:300])
hist(admission$gretot[1:300])
count(admission$status[1:300])
count(admission$decision[1:300])
count(admission$university[1:300])
count(admission$status[1:350])
count(admission$decision[1:350])
count(admission$university[1:300])
count(admission$decision)
count(admission$status)
# Count check
hist(admission$score[1:300] && admission$status == 'U')
# Count check
hist(admission$score[1:300, which(admission$status == 'U')])
# Count check
hist(admission$score[which(admission$status == 'U')])
count(admission$decision[which(admission$status == 'U')])
count(admission$decision[which(admission$status == 'I')])
count(admission$decision[which(admission$status == 'A')])
hist(admission$gretot[which(admission$status == 'U')])
hist(admission$gretot[which(admission$status == 'I')])
hist(admission$gretot[which(admission$status == 'A')])
hist(admission$gpafin[which(admission$status == 'U')])
hist(admission$gpafin[which(admission$status == 'I')])
hist(admission$gpafin[which(admission$status == 'A')])
# Count check
hist(admission$score[1:300])
hist(admission$year[1:300])
hist(admission$gpafin[1:300])
hist(admission$gretot[1:300])
count(admission$status)
count(admission$decision)
count(admission$university[1:300])
library(SDSRegressionR)
# Import data
data <- read.csv("data/cs_data.csv", stringsAsFactors = FALSE)
# Import data
data <- read.csv("data/cs_data.csv", stringsAsFactors = FALSE)
admission <- data[1:300]
admission <- data[1:300]
admission <- data[1:300, 1:]
admission <- data.df[1:300, ]
admission <- data[1:300, ]
View(admission)
View(admission)
View(data)
View(data)
# Count check
hist(admission$score)
hist(admission$year)
hist(admission$gpafin)
hist(admission$gretot)
count(admission$status)
count(admission$decision)
count(admission$university)
summary(admission)
names(admission)
# Factorize Variables
table(admission$decision)
admission$decision <- factor(admission$decision, levels=c(0,1), labels=c("Rejected","Accepted"))
# Factorize Variables
table(admission$decision)
# Import data
data <- read.csv("data/cs_data.csv", stringsAsFactors = FALSE)
admission <- data[1:300, ]
names(admission)
# Factorize Variables
table(admission$decision)
admission$decision <- factor(admission$decision, levels=c(1, 0), labels=c("Accepted","Rejected"))
# Factorize Variables
table(admission$decision)
# Import data
data <- read.csv("data/cs_data.csv", stringsAsFactors = FALSE)
admission <- data[1:300, ]
names(admission)
# Factorize Variables
table(admission$decision)
admission$decision <- factor(admission$decision, labels=c("Rejected","Accepted"))
# Factorize Variables
table(admission$decision)
# Import data
data <- read.csv("data/cs_data.csv", stringsAsFactors = FALSE)
admission <- data[1:300, ]
names(admission)
# Factorize Variables
table(admission$decision)
admission$decision <- factor(admission$decision, levels=c("Rejected","Accepted"))
# Factorize Variables
table(admission$decision)
names(admission)
table(admission$major)
# Import data
data <- read.csv("data/cs_data.csv", stringsAsFactors = FALSE)
admission <- data[1:300, ]
names(admission)
# Factorize Variables
table(admission$decision)
# Count check
hist(admission$score)
hist(admission$year)
hist(admission$gpafin)
hist(admission$gretot)
count(admission$status)
count(admission$decision)
count(admission$university)
summary(admission)
admission <- data[1:350, ]
names(admission)
# Factorize Variables
table(admission$decision)
hist
hist(admission$gretot)
summary(admission)
count(admission$status)
count(data$status)
table(admission$status)
table(admission$major)
admission$status <- factor(admission$status, levels=c("A", "U", "I"))
table(admission$status)
table(admission$degree)
# Count check
hist(admission$score)
summary(admission)
# Factorize Variables
table(admission$decision)
admission$decision <- factor(admission$decision, levels=c("Rejected","Accepted"))
summary(admission)
table(admission$degree)
admission$status <- factor(admission$status, levels=c("Masters", "PhD"))
table(admission$degree)
summary(admission)
# Import data
data <- read.csv("data/cs_data.csv", stringsAsFactors = FALSE)
admission <- data[1:350, ]
names(admission)
# Factorize Variables
table(admission$decision)
admission$decision <- factor(admission$decision, levels=c("Rejected","Accepted"))
table(admission$status)
admission$status <- factor(admission$status, levels=c("A", "U", "I"))
table(admission$degree)
admission$degree <- factor(admission$degree, levels=c("Masters", "PhD"))
# Summary
summary(admission)
names(admission)
# Import data
data <- read.csv("data/cs_data.csv", stringsAsFactors = FALSE)
admission <- data[1:350, ]
names(admission)
# Factorize Variables
table(admission$decision)
admission$decision <- factor(admission$decision, levels=c("Rejected","Accepted"))
table(admission$status)
admission$status <- factor(admission$status, levels=c("A", "U", "I"))
table(admission$degree)
admission$degree <- factor(admission$degree, levels=c("Masters", "PhD"))
# Summary
summary(admission)
# Distribution check
hist(admission$ranking)
hist(admission$year)
hist(admission$gpafin)
hist(admission$gretot)
#Intital Model
adm_mod <- glm(decision ~ gretot + gpafin + status + degree + ranking, data=admission, family="binomial")
summary(adm_mod)
library(car)
vif(adm_mod)
cooksPlot(adm_mod, key.variable = "id", print.obs = TRUE, sort.obs = TRUE)
threeOuts(adm_mod, key.variable = "id")
# Odds-ratios
exp(adm_mod$coef)
exp(confint.default(adm_mod))
# Stats
library(rms)
adm_mod_2 <- lrm(decision ~ gretot + gpafin + status + degree + ranking, admission)
adm_mod_2
# Examine the variables of interest graphically...
# Look at ranges...
summary(admission)
# Predict
library(lsmeans)
admission_mns <- summary(lsmeans(adm_mod, "gretot",
at=list(PSA = seq(297, 340, 10)), type="response"))
# Graph GRE
g <- simpleScatter(admission, gretot, decision, title="Decision Graph",
xlab="GRE", ylab="P(Admission)")
g +
geom_line(data=admission_mns, aes(x=gretot, y=prob), color="red") +
geom_line(data=admission_mns, aes(x=gretot, y=asymp.LCL), linetype="dashed") +
geom_line(data=admission_mns, aes(x=gretot, y=asymp.UCL), linetype="dashed")
# Graph GRE
g <- simpleScatter(admission, gretot, decision, title="Decision Graph",
xlab="GRE", ylab="P(Admission)")
g +
geom_line(data=admission_mns, aes(x=gretot, y=prob, group=1), color="red") +
geom_line(data=admission_mns, aes(x=gretot, y=asymp.LCL, group=1), linetype="dashed") +
geom_line(data=admission_mns, aes(x=gretot, y=asymp.UCL,group=1), linetype="dashed")
admission_mns <- summary(lsmeans(adm_mod, "gretot",
at=list(gretot = seq(297, 340, 10)), type="response"))
# Graph GRE
g <- simpleScatter(admission, gretot, decision, title="Decision Graph",
xlab="GRE", ylab="P(Admission)")
g +
geom_line(data=admission_mns, aes(x=gretot, y=prob, group=1), color="red") +
geom_line(data=admission_mns, aes(x=gretot, y=asymp.LCL, group=1), linetype="dashed") +
geom_line(data=admission_mns, aes(x=gretot, y=asymp.UCL,group=1), linetype="dashed")
admission_mns <- summary(lsmeans(adm_mod, "gretot",
at=list(gretot = seq(297, 340, 10)), type="response"))
# Graph GRE
g <- simpleScatter(admission, gretot, decision, title="Decision Graph",
xlab="GRE", ylab="P(Admission)")
g +
geom_line(data=admission_mns, aes(x=gretot, y=prob), color="red") +
geom_line(data=admission_mns, aes(x=gretot, y=asymp.LCL), linetype="dashed") +
geom_line(data=admission_mns, aes(x=gretot, y=asymp.UCL), linetype="dashed")
# Graph GRE
g <- simpleScatter(admission, gretot, decision, title="Decision Graph",
xlab="GRE", ylab="P(Admission)")
g +
geom_line(data=admission_mns, aes(x=gretot, y=prob), color="red") +
geom_line(data=admission_mns, aes(x=gretot, y=asymp.LCL), linetype="dashed") +
geom_line(data=admission_mns, aes(x=gretot, y=asymp.UCL), linetype="dashed")
g +
geom_line(data=admission_mns, aes(x=gretot, y=prob), color="red") +
geom_line(data=admission_mns, aes(x=gretot, y=asymp.LCL), linetype="dashed") +
geom_line(data=admission_mns, aes(x=gretot, y=asymp.UCL), linetype="dashed") +
geom_vline(xintercept = 320, color="blue")
# Factorize Variables
table(admission$decision)
g2 <- simpleScatter(admission, ranking, decision, title="Decision Plot",
xlab="Ranking", ylab="P(Admission)")
g2 +
geom_line(data=admission_mns_rank, aes(x=ranking, y=prob), color="red") +
geom_line(data=admission_mns_rank, aes(x=ranking, y=asymp.LCL), linetype="dashed") +
geom_line(data=admission_mns_rank, aes(x=ranking, y=asymp.UCL), linetype="dashed")
admission_mns_rank <- summary(lsmeans(adm_mod, "ranking",
at=list(ranking = seq(2.3, 0.1, 5)), type="response"))
# Graph Ranking
g2 <- simpleScatter(admission, ranking, decision, title="Decision Plot",
xlab="Ranking", ylab="P(Admission)")
g2 +
geom_line(data=admission_mns_rank, aes(x=ranking, y=prob), color="red") +
geom_line(data=admission_mns_rank, aes(x=ranking, y=asymp.LCL), linetype="dashed") +
geom_line(data=admission_mns_rank, aes(x=ranking, y=asymp.UCL), linetype="dashed")
admission_mns_rank <- summary(lsmeans(adm_mod, "ranking",
at=list(ranking = seq(2.3, 0.1, 5)), type="response"))
admission_mns_rank <- summary(lsmeans(adm_mod, "ranking",
at=list(ranking = seq(2.3, 5, 0.1)), type="response"))
# Graph Ranking
g2 <- simpleScatter(admission, ranking, decision, title="Decision Plot",
xlab="Ranking", ylab="P(Admission)")
g2 +
geom_line(data=admission_mns_rank, aes(x=ranking, y=prob), color="red") +
geom_line(data=admission_mns_rank, aes(x=ranking, y=asymp.LCL), linetype="dashed") +
geom_line(data=admission_mns_rank, aes(x=ranking, y=asymp.UCL), linetype="dashed")
# Factorize Variables
table(admission$decision)
admission$decision <- factor(admission$decision, levels=c("Rejected","Accepted"))
